# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if head == None:
            return False

        slow = head
        fast = head

        firstIteration = True

        while slow.next and fast.next and fast.next.next:
            print(slow.val)
            if slow is fast and firstIteration == False:
                return True
            slow = slow.next
            fast = fast.next.next
            firstIteration = False

        return False
